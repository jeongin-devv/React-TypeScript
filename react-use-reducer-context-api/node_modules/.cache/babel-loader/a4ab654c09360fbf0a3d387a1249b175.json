{"ast":null,"code":"var _jsxFileName = \"/Users/jeongin/Desktop/React-Study/react-use-reducer-context-api/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []); // 별칭 구조분해 할당\n\n  const {\n    isValid: emailisValid,\n    value: emailValue\n  } = emailState;\n  const {\n    isValid: passwordisValid,\n    value: passwordValue\n  } = passwordState;\n  useEffect(() => {\n    // 디바운스 구현 \n    const identifier = setTimeout(() => {\n      console.log('checking form validity');\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500); // 첫 번째 사이드 이펙트가 실행 되기 전에는 실행되지 않는다.\n    // 컴포넌트가 재 렌더링 되고 나서 실행된다.\n    // 상단의 함수가 실행 되고 나서 클린업 함수가 실행 된다.\n\n    return () => {\n      console.log(\"clean up\"); // 클린업이 먼저 실행 된후 타이머가 생성되므로 \n      // 시간내에 계속 실행 될 경우, 타이머 내부의 함수는 실행되지 않고\n      // 마지막 함수 호출 뒤에 타이머 내부 함수가 실행되게 된다.\n\n      clearTimeout(identifier);\n    }; // 의존성\n  }, [emailisValid, passwordisValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.value.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes('@'));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qNjyCNtnrbv5Htao1803HgyYXJ0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailisValid","emailValue","passwordisValid","passwordValue","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/Users/jeongin/Desktop/React-Study/react-use-reducer-context-api/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT'){\n    return {value : action.val, isValid: action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value : state.value, isValid: state.value.includes('')};\n  }\n  return {value:'',isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type === 'USER_INPUT'){\n    return {value : action.val, isValid: action.val.trim().length > 6};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value : state.value, isValid: state.value.trim().length > 6};\n  }\n  return {value:'',isValid: false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer,{\n    value:'',\n    isValid:null\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer,{\n    value: '',\n    isValid:null\n  });\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n  // 별칭 구조분해 할당\n  const { isValid : emailisValid, value : emailValue } = emailState;\n  const { isValid : passwordisValid, value : passwordValue } = passwordState;\n\n  useEffect(()=>{\n    // 디바운스 구현 \n    const identifier = setTimeout(()=>{\n      console.log('checking form validity')\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n    },500)\n    // 첫 번째 사이드 이펙트가 실행 되기 전에는 실행되지 않는다.\n    // 컴포넌트가 재 렌더링 되고 나서 실행된다.\n    // 상단의 함수가 실행 되고 나서 클린업 함수가 실행 된다.\n    return ()=>{\n      console.log(\"clean up\");\n      // 클린업이 먼저 실행 된후 타이머가 생성되므로 \n      // 시간내에 계속 실행 될 경우, 타이머 내부의 함수는 실행되지 않고\n      // 마지막 함수 호출 뒤에 타이머 내부 함수가 실행되게 된다.\n      clearTimeout(identifier);\n    };\n    // 의존성\n  },[ emailisValid, passwordisValid ])\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.value.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes('@'));\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type:'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}