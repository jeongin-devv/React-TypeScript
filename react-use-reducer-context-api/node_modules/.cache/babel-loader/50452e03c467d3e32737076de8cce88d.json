{"ast":null,"code":"var _jsxFileName = \"/Users/jeongin/Desktop/React-Study/react-use-reducer-context-api/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []); // 별칭 구조분해 할당\n\n  const {\n    isValid: emailisValid\n  } = emailState;\n  const {\n    isValid: passwordisValid\n  } = passwordState;\n  useEffect(() => {\n    // 디바운스 구현 \n    const identifier = setTimeout(() => {\n      console.log('checking form validity');\n      setFormIsValid(emailisValid && passwordisValid);\n    }, 500); // 첫 번째 사이드 이펙트가 실행 되기 전에는 실행되지 않는다.\n    // 컴포넌트가 재 렌더링 되고 나서 실행된다.\n    // 상단의 함수가 실행 되고 나서 클린업 함수가 실행 된다.\n\n    return () => {\n      console.log(\"clean up\"); // 클린업이 먼저 실행 된후 타이머가 생성되므로 \n      // 시간내에 계속 실행 될 경우, 타이머 내부의 함수는 실행되지 않고\n      // 마지막 함수 호출 뒤에 타이머 내부 함수가 실행되게 된다.\n\n      clearTimeout(identifier);\n    }; // 의존성\n  }, [emailisValid, passwordisValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.value.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes('@'));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const ctx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      ctx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailisValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        isValid: emailisValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"passwerd\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordisValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"14mTUZr/d2mzgvLfRnjmUMLqaCU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","Input","AuthContext","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailisValid","passwordisValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","ctx","emailInputRef","passwordInputRef","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"sources":["/Users/jeongin/Desktop/React-Study/react-use-reducer-context-api/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../../store/auth-context';\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT'){\n    return {value : action.val, isValid: action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value : state.value, isValid: state.value.includes('')};\n  }\n  return {value:'',isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type === 'USER_INPUT'){\n    return {value : action.val, isValid: action.val.trim().length > 6};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value : state.value, isValid: state.value.trim().length > 6};\n  }\n  return {value:'',isValid: false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer,{\n    value:'',\n    isValid:null\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer,{\n    value: '',\n    isValid:null\n  });\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n  // 별칭 구조분해 할당\n  const { isValid : emailisValid } = emailState;\n  const { isValid : passwordisValid } = passwordState;\n\n  useEffect(()=>{\n    // 디바운스 구현 \n    const identifier = setTimeout(()=>{\n      console.log('checking form validity')\n      setFormIsValid(emailisValid && passwordisValid);\n    },500)\n    // 첫 번째 사이드 이펙트가 실행 되기 전에는 실행되지 않는다.\n    // 컴포넌트가 재 렌더링 되고 나서 실행된다.\n    // 상단의 함수가 실행 되고 나서 클린업 함수가 실행 된다.\n    return ()=>{\n      console.log(\"clean up\");\n      // 클린업이 먼저 실행 된후 타이머가 생성되므로 \n      // 시간내에 계속 실행 될 경우, 타이머 내부의 함수는 실행되지 않고\n      // 마지막 함수 호출 뒤에 타이머 내부 함수가 실행되게 된다.\n      clearTimeout(identifier);\n    };\n    // 의존성\n  },[ emailisValid, passwordisValid ])\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.value.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes('@'));\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type:'INPUT_BLUR'});\n  };\n  const ctx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid){\n      ctx.onLogin(emailState.value, passwordState.value);\n    }else if(!emailisValid){\n      emailInputRef.current.focus();\n    }else{\n      passwordInputRef.current.focus();\n    }\n    \n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-mail\"\n          type=\"email\"\n          isValid={emailisValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input \n          ref={passwordInputRef}\n          id=\"passwerd\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordisValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        {/* <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div> */}\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}